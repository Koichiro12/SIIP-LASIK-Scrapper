<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAgL/AAIC/wACAv8BAQH/AQIC/wECAv8BAQH/AQEB/wECAv8BAQH/AQEB/wEBAf8BAQL/AQEB/wEB
        Af8BAgL/AQIC/wEBAf8BAQL/AQEB/wEBAf8BAQH/AQEB/wEBAf8BAQH/AQEC/wECAv8BAgL/AQEB/wEB
        Af8AAgL/AAIC/wACAv8BAQH/AQEB/wEBAv8AAAD/AAAA/wEBAf8BAQD/AAAA/wEAAP8BAQH/AQAA/wAA
        AP8BAAD/AQAA/wAAAP8BAAD/AQAA/wAAAP8AAAD/AQAA/wEBAP8BAAD/AQAA/wEAAP8BAQH/AAAA/wAA
        AP8BAgL/AQEB/wACAv8AAgL/AQEB/wEBAf8BAQH/AQEB/wcPFf8NHCf/CxYf/wsXIf8MGyb/Cxgi/wsZ
        I/8MGyf/DR4q/w0cKP8LFh//ECk6/xAoOP8KFBz/Cxgj/wwbJ/8LGST/Cxgj/wsYIv8MGyb/Cxch/wwY
        Iv8NGyb/BgwR/wAAAP8BAQH/AQEB/wEBAf8BAgL/AQEC/wAAAP8MGSP/FSs9/xMrPv8WOVH/EiMy/wsU
        HP8RJDP/EiU1/wsWH/8HCg//EiIu/xIjMP8gVXn/HU1t/w8bJv8QICz/BgsP/wwXIf8SJjX/ESQz/woT
        G/8UKTn/GDxV/xIoOf8TJjX/CRQc/wAAAP8BAQL/AQEB/wEBAv8AAAD/BAkM/xUrPP8PIC3/CREY/w8l
        Nv8dSWn/IFBy/xlAXf8NHCf/Gz5W/xMkMv8VKTn/ECUz/x5IZf8cPlj/ECAu/xMnNv8SJTT/GjpR/wsX
        IP8WOVL/H0tr/x9OcP8OJTX/CBEY/w8fLf8SJjb/BAcK/wAAAP8BAQH/AQIC/wAAAP8KFR3/Eyg4/xAl
        NP8fTWz/ECIw/w8kM/8ZRGD/DBcg/xczR/8SJzf/CBEa/wMEBv8QJzf/GDtT/xc3Tf8OIS7/AgME/wkQ
        Gf8QJDP/FjBC/woSGf8XPlj/DiEu/xIkM/8bRWT/DRom/xAhL/8IEhr/AAAA/wECAv8BAgL/AAAA/woX
        H/8UJzX/EyQy/xg6Uv8XM0j/DBwo/xQwQ/8LGCH/BQsQ/wEAAP8BAgT/AwYL/wEBAv8DBgn/AwUI/wEB
        Av8EBwz/AQEC/wAAAP8GDhP/Dx8p/xMtP/8NHiv/FzZN/xUwRv8RHSn/ESEv/wgUHf8AAAD/AQIC/wEC
        Av8AAAD/Cxgh/w0XH/8SIi//Fi0//woQFf8VMUX/Dh0o/wIDBf8DCA7/AgMD/wMGCv8FCxP/AgIC/wYO
        GP8ECQ//AQAA/wUNFf8DBwz/AgIC/wMHDf8BAwT/ECIv/xUvQv8IDxX/Fi1B/xAeK/8LFiD/CRYf/wAA
        AP8BAgL/AQIC/wAAAP8KFR3/EiMw/xAkMv8dQ13/EB8r/wsXIP8BAAH/BAcK/wcOGP8EBwz/AwUH/wMH
        C/8DBwv/BAsT/wMGC/8DBQj/AQIC/wQIDv8FDRb/BQwU/wIEBv8AAAD/DBoi/w8eKf8cQ2D/DiEv/xAh
        L/8JExz/AAAA/wECAv8BAgL/AAAA/wkVHf8QHyv/H0Nd/xk6UP8NGyb/AQEA/wEBA/8AAgX/AQME/wQI
        DP8BAAD/AgQH/wUNF/8GDhj/BQsT/wMIDf8CAgT/AgMF/wICA/8BAQL/AgQG/wMFCf8BAQL/ECAr/xg6
        Uf8bRGD/ECAs/wkVHf8AAAD/AQIC/wECAv8AAAD/ChYe/w8bJf8RJTP/ESMx/wQGCf8DBQf/DiIu/w0d
        Jv8GDhP/AAAA/wcPGP8CAwb/AgID/wQJEP8GDRf/AQEC/wIEBv8DBAf/BQsU/wQIDv8EBwv/AQEC/wAA
        AP8GCxH/ESUz/xMrO/8OHCf/ChYf/wAAAP8BAgL/AQIC/wAAAP8KFBz/EiMw/wwZI/8KFiD/AAAA/xAr
        P/8SLj//AgIC/xQxQf8PJzT/AQEE/wQHDP8FCAz/BAgO/wUMFP8CBAf/AwcL/wYMFf8ECQ//AQEB/wQI
        Df8FDBT/AgID/wMGC/8MGiX/Dhwm/xEkMv8JFBz/AAAA/wECAv8BAgL/AAAA/woWHv8OGCD/DRcg/wYN
        Ev8CBQn/AwcK/wgNEP8BAgL/AQEB/yJkif8OIy//AgAA/wEAAP8FCRD/AgQI/wECA/8ECQ//AQEC/wEC
        Av8EBwz/AwUI/wIECP8DBwv/AQEE/wcOE/8MFx//DRgi/woWH/8AAAD/AQIC/wECAv8AAAD/CRMb/xMk
        Mv8QHyz/AgYJ/wECA/8LGiL/GlBv/x5egv8LHyr/IWaK/yJhg/8AAAD/DiMu/wULEP8JFh3/CBIY/wAA
        AP8LGyT/BxMZ/wAAAP8EBQf/DiUx/wMHCf8JFRv/AgQG/w8gLP8RJDL/CRQc/wAAAP8BAgL/AQIC/wAA
        AP8IEBX/FCk3/w8jMf8AAAD/EzJD/ymHvf8hZ4//G05p/xIxQv8qfKf/HE9o/wkWHf8mfa//Ey89/yNv
        mf8aRl//FDNF/yl8rP8eU2//AwQE/xdBV/8oeaX/FzpN/yt9qf8KFx7/Dx0o/xUrOv8IERb/AAAA/wEC
        Av8BAgP/AAAA/wwdKP8lWn3/FS5A/wcOEP8ui7z/IF6A/xg8Tf8OIiz/AAAA/yhxlv8hVXD/BxYd/yFp
        kv8EBQX/J3ik/wkTGf8dXH//GUZg/xIzQv8gWnr/G0pi/yBZd/8KHSf/JW2U/wAAAP8bO1H/IFN0/woW
        H/8AAAD/AQIC/wECA/8AAAD/DBsk/yVdgf8RJDP/Gj9Q/zmYxv8KFRz/K3SX/x9Rav8OHCT/Lnea/yZc
        d/8IFBv/J3Ob/wQFBv8vgav/CRMZ/yBbef8YQFT/EC07/ydqjf8fT2b/JmWD/w0hK/8qcpj/AAAA/xk5
        Tf8iVnj/Chgh/wAAAP8BAgL/AQIC/wAAAP8HEBX/FCk5/woTHP8lXXb/NIGk/wECAv8vd5n/Gj5Q/wEA
        AP8sdJX/KF13/wgUGv8teaD/BQYG/zaKsv8KFBr/Il16/xlCVv8RLDj/K3OW/woUGf8iUmn/HEpf/ylw
        k/8AAAD/FS4+/xQrOv8GDhP/AAAA/wECAv8BAgL/AAAA/wgSGP8VKjr/ChIb/yVbc/8yd5b/AwYH/zSG
        q/8SKzf/CxYb/z6eyP8pYHv/ECYw/zeNtf8EBQX/Oo2y/wsVGv8scJD/Hkhc/xU0Q/8vdpn/Ey06/woU
        Gv8YPU//M4Ss/wAAAP8VKjn/FCs7/wYPFf8AAAD/AQIC/wECAv8AAAD/CRQc/w4bJf8KERj/G0FU/zSA
        ov8ECAr/M4Cj/xc1RP80f6D/OYqu/wsXHf8ZOkr/JFt0/wIAAP89j7P/ECEq/zB2lf8ULTj/I1Vs/yhk
        gf8GDhL/J2OA/z+cx/8eTGL/BQkN/xEhLf8NGyb/CBIa/wAAAP8BAgL/AQIC/wAAAP8JExr/EiMw/w8d
        KP8KFyD/MHma/w8kLv8wepz/Eigz/wcNEP8ECQv/AAAA/wQJC/8OHif/BAYH/z+RtP8OHyf/AAAA/wEB
        Af8FCQv/BgsO/wAAAP8JFRv/DBsi/wAAAP8JExr/ECEt/xIiL/8HERn/AAAA/wECAv8BAgL/AAAA/woV
        HP8PGyb/ESAs/wwXIv8VLz//I1Rr/zJ9nv8QJjD/BwwQ/xc0Q/8AAAD/DBkf/zJ6m/8MFRr/P5G0/xIr
        Nf8AAAD/BAgM/wEBAf8BAgT/AgME/wABAf8AAAD/BAgM/w4cJ/8TJzT/Dhwn/wgSGv8AAAD/AQIC/wEC
        Av8AAAD/ChQb/xIkMf8bQFn/GTlP/woTHf8LGSD/KWSB/yVXcP83gKL/SLLh/xk6Sv8AAAD/AwYH/wEA
        AP8ULDb/HD9O/wAAAP8DBgr/BAkO/wIDBP8DBQr/BAgN/wIEB/8KEhv/GDhN/x5IY/8QHyz/BxIZ/wAA
        AP8BAgL/AQMD/wAAAP8KFR3/EyQx/xInNv8fR2L/Dx0n/wYNE/8AAAD/GjpL/ziKr/8hUWf/ChMZ/wID
        BP8CAwX/BAgO/wEDBf8IDxL/BwsP/wMEB/8DBQj/AgQH/wQHC/8AAAD/Bg0S/w0ZIv8gUnL/ESg4/xEk
        Mf8IEhn/AAAA/wECAv8BAwP/AAAA/wsYIP8NGB//EiEu/xUsPv8JDxX/FzRI/woVHv8AAAD/AgME/wEB
        Av8AAAD/AwQH/wULE/8CBQj/BAkO/wMGC/8DBAf/AwME/wEBAv8ECQ//AwYJ/woVHv8TLT//DBUc/xgz
        R/8TJjT/DBki/woXIP8AAAD/AQIC/wECA/8AAAD/CRUc/xUqOf8UKDb/GTtT/xg3TP8OIC7/FTRJ/woU
        HP8GCxD/AAEC/wEDBv8BAgT/AAAA/wECA/8BAwP/AAAA/wMFCP8CAwX/AAAA/wQIDP8JEhr/Eiw9/w8g
        Lf8iSWP/HUFZ/xgpOP8VKjr/CRUd/wAAAP8BAgL/AQMD/wAAAP8KFR3/Eyc1/xIpOP8kWnz/ESUz/w8k
        Mf8bSGT/DRkj/xQtP/8TJzj/CxYg/wMFB/8ULT3/FzJF/xk1SP8QJjX/AwMF/woUHP8SJDT/Fy5A/w4c
        J/8cR2L/DR8r/xYtO/8mV3T/ECEu/xQqOP8KFh3/AAAA/wECA/8AAwP/AAAA/wUNEP8XLDv/EiQx/wsX
        H/8ULj//KWWJ/yVafv8aRGD/DyIv/x1EXf8ZMkT/FS9A/xMoNf8oVXH/Ikhg/xAlMv8UKzv/Fy4//x0+
        Vf8PHij/HUhi/ylegP8pX4D/Eyo4/wwWHf8UKTn/Fy08/wULDv8AAAD/AQEB/wACAv8AAgP/AAAA/xAg
        Kf8YLz//GDNF/yBJY/8ZMkL/Dhsk/xUsPf8YMEH/Dh4o/wkOEv8TJTH/FSg0/y5qi/8rZYf/Fis4/xgt
        Ov8MERX/EiAp/xowPv8ZMUH/EiAq/x86Tf8kTWb/GjdJ/xoyQv8OGyT/AAAA/wACAv8BAQH/AAIC/wAC
        Av8AAgL/AQIC/woUGv8RIiz/EiIr/xMjLf8VJzL/FCYw/xQnMf8VKTT/Fis3/xQnM/8RHyf/HT5Q/x5A
        Uv8VJCv/GCw1/xovOv8ZLDb/GSs0/xkqMv8ZLDb/Fycw/xgqNP8TJTD/CRIX/wABAv8AAgL/AAIC/wAC
        Av8AAgL/AAIC/wACAv8AAgL/AAAA/wAAAP8AAgL/AAIB/wABAf8AAQH/AAEB/wABAf8AAAD/AAEB/wAB
        Af8AAQH/AAEB/wABAv8AAQH/AAAA/wABAf8AAQH/AAEB/wABAP8AAQH/AAIC/wAAAP8AAAD/AAIC/wAC
        Av8AAgL/AAIC/wACAv8AAgL/AAIC/wACAv8AAwP/AQID/wECAv8AAgL/AAIC/wECAv8BAgL/AQIC/wAC
        Av8AAgL/AAIC/wACA/8AAwP/AAIC/wECAv8BAgL/AQIC/wECAv8BAgL/AQIC/wECAv8AAgL/AAMD/wEC
        A/8AAgL/AAIC/wACAv8AAgL/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>